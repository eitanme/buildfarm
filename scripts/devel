#!/usr/bin/env python
import os
import sys
import rosdistro
import yaml
import subprocess
import urllib
import datetime
import fnmatch
import shutil
from xml.etree.ElementTree import ElementTree
from common import *




def main():

    if len(sys.argv) != 3:
        print "Usage: %s ros_distro stack_name"%sys.argv[0]
        raise BuildException("Wrong number of parameters for ci devel script")
    else:
        ros_distro = sys.argv[1]
        stack = sys.argv[2]
        print "Working on distro %s and stacks %s"%(ros_distro, stack)

    workspace = os.environ['WORKSPACE']
    tmpdir = os.path.join(workspace, 'tmp', 'devel_builds')
    sourcespace = os.path.join(tmpdir, str(datetime.datetime.now()).replace(' ','_').replace(':','.'))
    stackbuildspace = os.path.join(sourcespace, 'build_stack')
    if os.path.isdir(tmpdir):
        shutil.rmtree(tmpdir)  # cleanup of old stuff
    os.makedirs(sourcespace)

    # Add ros to apt
    print "Add ros to apt sources"
    with open('/etc/apt/sources.list.d/ros-latest.list', 'w') as f:
        f.write("deb http://packages.ros.org/ros-shadow-fixed/ubuntu %s main"%os.environ['OS_PLATFORM'])
    call("wget http://packages.ros.org/ros.key -O %s/ros.key"%workspace)
    call("apt-key add %s/ros.key"%workspace)
    call("apt-get update")

    # install prerequisits
    print "Installing prerequisits"
    call("apt-get install mercurial subversion python-catkin-pkg python-support cmake --yes")

    # Create rosdep object
    print "Create rosdep object"
    rosdep = RosDepResolver(ros_distro)

    # parse the devel distro file
    print "Parsing devel yaml file for %s"%ros_distro
    f = urllib.urlopen('https://raw.github.com/ros/rosdistro/master/releases/%s-devel.yaml'%ros_distro)
    devel = yaml.load(f.read())['repositories']

    # download the stack from source
    print "Downloading stack %s"%stack
    if not stack in devel.keys():
        raise BuildException("Stack %s does not exist in devel distro file"%stack)
    conf = devel[stack]
    rosinstall = yaml.dump([{conf['type']: {'local-name': stack, 'uri': conf['url'], 'version': conf['version']}}], default_style=False)
    print "Rosinstall for stack %s:\n %s"%(stack, rosinstall)
    with open(workspace+"/stack.rosinstall", 'w') as f:
        f.write(rosinstall)
    print "Create rosinstall file for stack %s"%stack
    call("rosinstall %s %s/stack.rosinstall --catkin"%(sourcespace, workspace))

    # install the stack dependencies
    print "Get all stack dependencies"
    dependencies = get_dependencies(os.path.join(sourcespace, stack))
    if len(dependencies) > 0:
        print "Install all dependencies of stacks: %s"%(', '.join(dependencies))
        call("apt-get install %s --yes"%(' '.join([rosdep.to_apt(r) for r in dependencies])))

    # replace the CMakeLists.txt file for stacks that use catkin
    print "Removing the CMakeLists.txt file generated by rosinstall"
    os.remove(os.path.join(sourcespace, 'CMakeLists.txt'))
    os.makedirs(stackbuildspace)
    os.chdir(stackbuildspace)
    if 'catkin' in dependencies:
        print "Create a new CMakeLists.txt file using catkin"
        ros_env = get_ros_env('/opt/ros/%s/setup.bash'%ros_distro)
        call("catkin_init_workspace %s"%sourcespace, ros_env)
        call("cmake ..", ros_env)        
        ros_env = get_ros_env(os.path.join(stackbuildspace, 'buildspace/setup.bash'))
    else:
        print "Use the CMakeLists.txt file from the stack itself"
        ros_env = os.environ
        call("cmake ../%s/"%stack, ros_env)

    # build stack
    print "Build stack %s"%stack
    call("make", ros_env)
    print "Build tests of stack %s"%stack
    call("make tests", ros_env)
    print "Test stack %s"%stack
    call("make run_tests", ros_env)

    # copy all test results
    copy_test_results(workspace, stackbuildspace)


if __name__ == '__main__':
    # global try
    try:
        main()
        print "Devel script finished cleanly"

    # global catch
    except BuildException as ex:
        print ex.msg

    except Exception as ex:
        print "Devel Test Failed. Check out the consule output for details"
        raise ex


